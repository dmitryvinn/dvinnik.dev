{"version":3,"sources":["webpack:///./src/components/PressMentions/styles.js","webpack:///./src/components/PressMentions/index.js","webpack:///./src/pages/press-mentions.tsx"],"names":["PressMentions","styled","div","Card","Content","Image","figure","Title","h3","Description","p","Date","Tags","Tag","span","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","pressMentions","edges","Container","section","TitleSection","title","subtitle","center","map","item","node","id","slug","fields","cover","description","date","tags","key","to","whileHover","scale","whileTap","fluid","childImageSharp","alt","PressMentionsPage","Layout","SEO"],"mappings":"0PAGaA,EAAgBC,IAAOC,IAAV,wEAAGD,CAAH,SACpB,+CAOOE,GAJOF,IAAOC,IAAV,+DAAGD,CAAH,SACX,4EAGcA,IAAOC,IAAV,+DAAGD,CAAH,SACX,qJAGOG,EAAUH,IAAOC,IAAV,kEAAGD,CAAH,SACd,kCAGOI,EAAQJ,IAAOK,OAAV,gEAAGL,CAAH,SACZ,gBAGOM,EAAQN,IAAOO,GAAV,gEAAGP,CAAH,SACZ,wCAGOQ,EAAcR,IAAOS,EAAV,sEAAGT,CAAH,MAEXU,EAAOV,IAAOO,GAAV,+DAAGP,CAAH,SACX,sCAGOW,EAAOX,IAAOC,IAAV,+DAAGD,CAAH,QACX,uDAGOY,EAAMZ,IAAOa,KAAV,8DAAGb,CAAH,QACV,iNCuDSD,EAlFO,WAAO,IAAD,EACoBe,yBAAe,aAArDC,EADkB,EAClBA,eAAgBC,EADE,EACFA,kBAqClBC,EAAeF,EAAeG,YAC9BC,EAAgBH,EAAkBI,MAExC,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,MAAOP,EAAaO,MAAOC,SAAUR,EAAaQ,SAAUC,QAAM,IAChF,kBAAC,EAAD,KACGP,EAAcQ,KAAI,SAACC,GAAU,IAAD,EAKvBA,EAAKC,KAHPC,EAFyB,EAEzBA,GACUC,EAHe,EAGzBC,OAAUD,KAHe,IAIzBb,YAAeM,EAJU,EAIVA,MAAOS,EAJG,EAIHA,MAAOC,EAJJ,EAIIA,YAAaC,EAJjB,EAIiBA,KAAMC,EAJvB,EAIuBA,KAGlD,OACE,kBAAC,EAAD,CAAsBC,IAAKP,GACzB,kBAAC,IAAD,CAAMQ,GAAIP,GACR,kBAAC,IAAO9B,IAAR,CAAYsC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAC1D,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKE,MAAOT,EAAMU,gBAAgBD,MAAOE,IAAKpB,KAEhD,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAcW,GACd,kBAAC,EAAD,KAAeX,GACf,kBAAC,EAAD,KAAqBU,IAEvB,kBAAC,EAAD,KACGE,EAAKT,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAYS,IAAKT,GAAOA,UAMlC,oCCrECiB,UATqB,WAClC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKvB,MAAM,kBACX,kBAAC,EAAD","file":"component---src-pages-press-mentions-tsx-36c750b35eb385274c01.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const PressMentions = styled.div`\n  ${tw`w-full flex flex-wrap`};\n`;\n\nexport const Post = styled.div`\n  ${tw`w-full sm:w-1/2 p-3`};\n`;\n\nexport const Card = styled.div`\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\n`;\n\nexport const Content = styled.div`\n  ${tw`p-4 text-indigo-900`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Description = styled.p``;\n\nexport const Date = styled.h3`\n  ${tw`text-xs text-pink-500`};\n`;\n\nexport const Tags = styled.div`\n  ${tw`p-4 pt-2 mt-auto`}\n`;\n\nexport const Tag = styled.span`\n  ${tw`text-xs text-indigo-900 border border-pink-500 rounded-full px-2 py-1 mr-2`}\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Link from 'gatsby-link';\nimport { motion } from 'framer-motion';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst PressMentions = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"press-mentions section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"press-mention\" }, published: { eq: true } } }\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              date(formatString: \"MMM DD, YYYY\")\n              tags\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const sectionTitle = markdownRemark.frontmatter;\n  const pressMentions = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.PressMentions>\n        {pressMentions.map((item) => {\n          const {\n            id,\n            fields: { slug },\n            frontmatter: { title, cover, description, date, tags }\n          } = item.node;\n\n          return (\n            <Styled.PressMentions key={id}>\n              <Link to={slug}>\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\n                  <Styled.Card>\n                    <Styled.Image>\n                      <Img fluid={cover.childImageSharp.fluid} alt={title} />\n                    </Styled.Image>\n                    <Styled.Content>\n                      <Styled.Date>{date}</Styled.Date>\n                      <Styled.Title>{title}</Styled.Title>\n                      <Styled.Description>{description}</Styled.Description>\n                    </Styled.Content>\n                    <Styled.Tags>\n                      {tags.map((item) => (\n                        <Styled.Tag key={item}>{item}</Styled.Tag>\n                      ))}\n                    </Styled.Tags>\n                  </Styled.Card>\n                </motion.div>\n              </Link>\n              <br></br>\n            </Styled.PressMentions>\n          );\n        })}\n      </Styled.PressMentions>\n    </Container>\n  );\n};\n\nexport default PressMentions;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport PressMentions from 'components/PressMentions';\n\nconst PressMentionsPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"PressMentions\" />\n      <PressMentions />\n    </Layout>\n  );\n};\n\nexport default PressMentionsPage;\n"],"sourceRoot":""}