{"version":3,"sources":["webpack:///./src/templates/Video/styles.js","webpack:///./src/templates/Video/index.js","webpack:///./src/components/utils/FormatHtml/index.js"],"names":["Links","styled","h3","figure","div","Video","data","pageContext","video","markdownRemark","previous","next","Layout","SEO","title","frontmatter","Container","section","TitleSection","date","subtitle","FormatHtml","content","html","to","fields","slug","rel","className","dangerouslySetInnerHTML","__html"],"mappings":"2NAWaA,GARQC,IAAOC,GAAV,kEAAGD,CAAH,SACZ,wCAGeA,IAAOE,OAAV,kEAAGF,CAAH,SACZ,+FAGeA,IAAOG,IAAV,kEAAGH,CAAH,SACZ,kFC+BSI,UA/BD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACfC,EAAQF,EAAKG,eACXC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAON,EAAMO,YAAYD,QAC9B,kBAACE,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcJ,MAAON,EAAMO,YAAYI,KAAMC,SAAUZ,EAAMO,YAAYD,QACzE,kBAACO,EAAA,EAAD,CAAYC,QAASd,EAAMe,OAC3B,kBAAC,EAAD,KACE,8BACGb,GACC,kBAAC,IAAD,CAAMc,GAAId,EAASe,OAAOC,KAAMC,IAAI,YAApC,KACKjB,EAASK,YAAYD,QAI9B,8BACGH,GACC,kBAAC,IAAD,CAAMa,GAAIb,EAAKc,OAAOC,KAAMC,IAAI,QAC7BhB,EAAKI,YAAYD,MADpB,Y,kCChCd,yBAgBeO,IAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,0BACEM,UAAU,cACVC,wBAAyB,CACvBC,OAAQR","file":"component---src-templates-video-index-js-f970ca7fa25980acc583.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\n`;\n\nexport const Links = styled.div`\n  ${tw`w-full flex justify-between mt-10`};\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport * as Styled from './styles';\n\nconst Video = ({ data, pageContext }) => {\n  const video = data.markdownRemark;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout>\n      <SEO title={video.frontmatter.title} />\n      <Container section>\n        <TitleSection title={video.frontmatter.date} subtitle={video.frontmatter.title} />\n        <FormatHtml content={video.html} />\n        <Styled.Links>\n          <span>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"previous\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </span>\n          <span>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </span>\n        </Styled.Links>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Video;\n\nexport const query = graphql`\n  query VideoBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormatHtml = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nFormatHtml.propTypes = {\n  content: PropTypes.any.isRequired\n};\n\nexport default FormatHtml;\n"],"sourceRoot":""}